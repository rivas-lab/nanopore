PLINK v2.00a 64-bit (14 Oct 2016)                                [website TBD]
(C) 2005-2016 Shaun Purcell, Christopher Chang   GNU General Public License v3

In the command line flag definitions that follow,
  * [square brackets] denote a required parameter, where the text between the
    brackets describes its nature.
  * <angle brackets> denote an optional modifier (or if '|' is present, a set
    of mutually exclusive optional modifiers).  Use the EXACT text in the
    definition.
  * There's one exception to the angle brackets/exact text rule: when an angle
    bracket term ends with '=[value]', '[value]' designates a variable
    parameter.
  * {curly braces} denote an optional parameter, where the text between the
    braces describes its nature.
  * An ellipsis (...) indicates that you may enter multiple parameters of the
    specified type.

  plink2 [input flag(s)...] {command flag(s)...} {other flag(s)...}
  plink2 --help {flag name(s)...}

Most plink2 runs require exactly one main input fileset.  The following flags
are available for defining its form and location:

  --pfile [prefix]       : Specify .pgen + .pvar + .psam prefix.
  --pgen [filename]      : Specify full name of .pgen/.bed file.
  --pvar [filename]      : Specify full name of .pvar/.bim file.
  --psam [filename]      : Specify full name of .psam/.fam file.

  --bfile [prefix]       : Specify .bed + .bim + .fam prefix.
  --bpfile [prefx]       : Specify .pgen + .bim + .fam prefix.

  --keep-autoconv    : With --file/--tfile/--lfile/--vcf/--bcf/--data/--23file,
                       don't delete autogenerated binary fileset at end of run.

  --no-fid           : .fam file does not contain column 1 (family ID).
  --no-parents       : .fam file does not contain columns 3-4 (parents).
  --no-sex           : .fam file does not contain column 5 (sex).
  --no-pheno         : .fam file does not contain column 6 (phenotype).

  --vcf [filename]   : Specify full name of .vcf{.gz} or BCF2 file.  These can
  --bcf [filename]     be used with --psam.  (--bcf not implemented yet.)

Output files have names of the form 'plink2.{extension}' by default.  You can
change the 'plink2' prefix with

  --out [prefix]     : Specify prefix for output files.

Most runs also require at least one of the following commands:

  --make-pgen <vzs> <format=[code]> <pvar-cols=[column set descriptor]>
              <psam-cols=[column set descriptor]>
  --make-bpgen <vzs> <format=[code]>
  --make-bed <vzs>
    Create a new binary fileset (--make-pgen = .pgen + .pvar{.gz} + .psam,
    --make-bpgen = .pgen + .bim{.gz} + .fam).
    * Unlike the automatic text-to-binary converters (which only heed
      chromosome filters), this supports all of plink2's filtering flags.
    * The 'vzs' modifier causes the variant file (.pvar/.bim) to be
      Zstd-compressed (not implemented yet).
    * The 'format' modifier requests an uncompressed fixed-variant-width .pgen
      file.  (These do not directly support multiallelic variants.)  The
      following format code is currently supported:
        2: just like .bed, except with an extended (12-byte instead of 3-byte)
           header containing variant/sample counts, and rotated genotype codes
           (00 = hom ref, 01 = het, 10 = hom alt, 11 = missing).
    * The first five columns of a .pvar file are always #CHROM/POS/ID/REF/ALT.
      Supported optional .pvar column sets are:
        xheader: All ## header lines (yeah, this is technically not a column).
                 Without this, only the #CHROM header line is kept.
        maybequal: QUAL.  Omitted if all loaded values are missing.
        qual: Force QUAL column to be written even when empty.
        maybefilter: FILTER.  Omitted if all loaded values are missing.
        filter: Force FILTER column to be written even when empty.
        maybeinfo: INFO.  Omitted if all loaded values are missing, or if
                   INFO:PR is the only subfield.
        info: Force INFO column to be written.
        maybecm: Centimorgan coordinate.  Omitted if all loaded values are 0.
        cm: Force CM column to be written even when empty.
      The default is xheader,maybequal,maybefilter,maybeinfo,maybecm.
    * The first two columns of a .psam file are always #FID/IID.  Supported
      optional .psam column sets are:
        maybesid: Sample disambiguation ID (useful when multiple samples are
                  collected from a single organism), '0' = missing.  Omitted if
                  all loaded values are missing.
        sid: Force SID column to be written even when empty.
        maybeparents: Father and mother IIDs, '0' = missing.  Omitted if all
                      loaded values are missing.
        parents: Force PAT and MAT columns to be written even when empty.
        sex: '1'/'M'/'m' = male, '2'/'F'/'f' = female, 'NA'/'0' = missing.
        pheno1: First active phenotype.  If none, all column entries are set to
                the --output-missing-phenotype string.
        phenos: All active phenotypes, if any.  (Can be combined with pheno1 to
                force at least one phenotype column to be written.)
      The default is maybesid,maybeparents,sex,phenos.

  --make-just-pvar <zs> <cols=[column set descriptor]>
  --make-just-psam <cols=[column set descriptor]>
  --make-just-bim <zs>
  --make-just-fam
    Variants of --make-pgen/--make-bed which only write a new variant or sample
    file.  These don't always require an input genotype file.
    USE THESE CAUTIOUSLY.  It is very easy to desynchronize your binary
    genotype data and your sample/variant indexes if you use these commands
    improperly.  If you have any doubt, stick with --make-{b}pgen/--make-bed.

  --export [output format(s)...] <01 | 12> <bgz> <id-delim=[char]>
    <id-paste=[column set descriptor]> <include-alt> <omit-nonmale-y> <spaces>
    Create a new text fileset with all filters applied.  The following output
    formats are supported:
    (actually, only ind-major-bed and vcf are implemented for now)
    * '23': 23andMe 4-column format.  This can only be used on a single
      sample's data (--keep may be handy), and does not support multicharacter
      allele codes.
    * 'A': Sample-major additive (0/1/2) coding, suitable for loading from R.
      If you need uncounted alleles to be named in the header line, add the
      'include-alt' modifier.
    * 'AD': Sample-major additive (0/1/2) + dominant (het=1/hom=0) coding.
      Also supports 'include-alt'.
    * 'A-transpose': Variant-major 0/1/2.
    * 'beagle': Unphased per-autosome .dat and .map files, readable by early
      BEAGLE versions.
    * 'beagle-nomap': Single .beagle.dat file.
    * 'bimbam': Regular BIMBAM format.
    * 'bimbam-1chr': BIMBAM format, with a two-column .pos.txt file.  Does not
      support multiple chromosomes.
    * 'fastphase': Per-chromosome fastPHASE files, with
      .chr-[chr #].phase.inp filename extensions.
    * 'fastphase-1chr': Single .phase.inp file.  Does not support
      multiple chromosomes.
    * 'HV': Per-chromosome Haploview files, with .chr-[chr #][.ped + .info]
      filename extensions.
    * 'HV-1chr': Single Haploview .ped + .info file pair.  Does not support
      multiple chromosomes.
    * 'ind-major-bed': PLINK 1 sample-major .bed (+ .bim + .fam).
    * 'lgen': PLINK 1 long-format (.lgen + .fam + .map), loadable with --lfile.
    * 'lgen-ref': .lgen + .fam + .map + .ref, loadable with --lfile +
       --reference.
    * 'list': Single genotype-based list, up to 4 lines per variant.  To omit
      nonmale genotypes on the Y chromosome, add the 'omit-nonmale-y' modifier.
    * 'rlist': .rlist + .fam + .map fileset, where the .rlist file is a
      genotype-based list which omits the most common genotype for each
      variant.  Also supports 'omit-nonmale-y'.
    * 'oxford': Oxford-format .gen + .sample.
    * 'ped': PLINK 1 sample-major (.ped + .map), loadable with --file.
    * 'compound-genotypes': Same as 'ped', except that the space between each
      pair of same-variant allele codes is removed.
    * 'structure': Structure-format.
    * 'transpose': PLINK 1 variant-major (.tped + .tfam), loadable with
      --tfile.
    * 'vcf': VCFv4.2.  If PAR1 and PAR2 are present, they are automatically
      merged with chrX, with proper handling of chromosome codes and male
      ploidy.  If the 'bgz' modifier is added, the VCF file is block-gzipped.
      The 'id-paste' modifier controls which .psam columns are used to
      construct sample IDs (choices are fid, iid, maybesid, and sid; default is
      fid,iid,maybesid), while the 'id-delim' modifier sets the character
      between the ID pieces (default '_').
    In addition,
    * When the output format only supports biallelic variants, multiallelic
      variants are downcoded to ref/alt1, not split.
    * The '12' modifier causes alt1 alleles to be coded as '1' and ref alleles
      to be coded as '2', while '01' maps alt1 -> 0 and ref -> 1.
    * The 'spaces' modifier makes the output space-delimited instead of
      tab-delimited, whenever both are permitted.

  --freq <zs> <counts> <cols=[column set descriptor]>
    Allele frequency report.  (By default, only founders are considered.)
    Supported column sets are:
      chrom: Chromosome ID.
      pos: Base-pair coordinate.
      (ID is always present, and positioned here.)
      ref: Reference allele.
      alt1: Alternate allele 1.
      alt: All alternate alleles, comma-separated.
      reffreq: Reference allele frequency/count.
      alt1freq: Alt1 frequency/count.
      altfreq: Comma-separated frequencies/counts for all alternate alleles.
      freq: Similar to altfreq, except ref is also included at the start.
      eq: Comma-separated [allele]=[freq] for all present alleles.  (If no
          alleles are present, the column contains a single '.'.)
      eqz: Same as eq, except zero-counts are included.
      alteq/alteqz: Same as eq/eqz, except reference allele is omitted.
      numeq: 0=[freq],1=[freq], etc.  Zero-counts are omitted.
      altnumeq: Same as numeq, except reference allele is omitted.
      nobs: Number of allele observations.
    The default is chrom,ref,alt,altfreq,nobs.

  --geno-counts <zs> <cols=[column set descriptor]>
    Genotype count report (considering both alleles simultaneously in the
    diploid case).  Nonfounders are now included; use --keep-founders if this
    is a problem.
    Supported column sets are:
      chrom: Chromosome ID.
      pos: Base-pair coordinate.
      (ID is always present, and positioned here.)
      ref: Reference allele.
      alt1: Alternate allele 1.
      alt: All alternate alleles, comma-separated.
      homref: Homozygous-ref count.
      refalt1: Heterozygous ref-alt1 count.
      refalt: Comma-separated het ref-altx counts.
      homalt1: Homozygous-alt1 count.
      altxy: Comma-separated altx-alty counts, in (1/1)-(1/2)-(2/2)-(1/3)-...
             order.
      xy: Similar to altxy, except the reference allele is treated as alt0,
          and the sequence starts (0/0)-(0/1)-(1/1)-(0/2)-...
      hapref: Haploid-ref count.
      hapalt1: Haploid-alt1 count.
      hapalt: Comma-separated haploid-altx counts.
      hap: Similar to hapalts, except ref is also included at the start.
      numeq: 0/0=[hom ref ct],0/1=[het ref-alt1],1/1=[hom alt1],...,0=[hap ref]
             etc.  Zero-counts are omitted.  (If all genotypes are missing, the
             column contains a single '.'.)
      missing: Number of missing genotypes.
      nobs: Number of (nonmissing) genotype observations.
    The default is chrom,ref,alt,homref,refalt,altxy,hapref,hapalt,missing.

  --missing <zs> <sample-only | variant-only> <scols=[column set descriptor]>
            <vcols=[column set descriptor]>
    Generate sample- and variant-based missing data reports (or just one report
    if 'sample-only'/'variant-only' is specified).
    Supported column sets in the sample-based report are:
      (FID and IID are always present, and positioned here.)
      maybesid: SID, if at least one nonmissing value is present.
      sid: Force SID column to be written even when empty.
      misspheno1: First active phenotype missing (Y/N)?  Always 'Y' if no
                  phenotypes are loaded.
      missphenos: A Y/N column for each loaded phenotype.  (Can be combined
                  with misspheno1 to force at least one such column.)
      nmiss: Number of missing genotype calls, not counting het haploids.
      nmisshh: Number of missing genotype calls, counting het haploids.
      hethap: Number of heterozygous haploid calls.
      nobs: Number of potentially valid calls.
      fmiss: Missing call rate, not counting het haploids.
      fmisshh: Missing call rate, counting het haploids.
    The default is maybesid,missphenos,nmisshh,nobs,fmisshh.
    Supported column sets in the variant-based report are:
      chrom: Chromosome ID.
      pos: Base-pair coordinate.
      (ID is always present, and positioned here.)
      ref: Reference allele.
      alt1: Alternate allele 1.
      alt: All alternate alleles, comma-separated.
      nmiss: Number of missing genotype calls, not counting het haploids.
      nmisshh: Number of missing genotype calls, counting het haploids.
      hethap: Number of heterozygous haploid calls.
      nobs: Number of potentially valid calls.
      fmiss: Missing call rate, not counting het haploids.
      fmisshh: Missing call rate, counting het haploids.
      fhethap: Heterozygous haploid rate.
    The default is chrom,nmisshh,nobs,fmisshh.

  --hardy <zs> <midp> <cols=[column set descriptor]>
    Hardy-Weinberg exact test p-value report(s).
    * For multiallelic variants, the test is based on the reference allele.
    * By default, only founders are considered; change this with --nonfounders.
    * chrX is now omitted from the main {output prefix}.hardy report.  Instead,
      (if present) it gets its own {output prefix}.hardy.x report based on the
      method described in Graffelman J, Weir BS (2016) Hardy-Weinberg
      equilibrium and the X chromosome.
    * There is currently no special handling of case/control phenotypes.
    Supported column sets are:
      chrom: Chromosome ID.
      pos: Base-pair coordinate.
      (ID is always present, and positioned here.)
      ref: Reference allele.
      alt1: Alternate allele 1.
      alt: All alternate alleles, comma-separated.
      gcounts: Hom-ref count, total number of ref-altx heterozygous calls, and
               total number of nonmissing calls with no reference allele.  On
               chrX, these are followed by male ref and male alt counts.
      gcount1col: gcounts values in a single comma-separated column.
      hetfreq: Observed and expected heterozygote frequencies.
      sexaf: Female and male ref allele frequencies (chrX only).
      femalep: Female-only p/midp-value (chrX only).
      p: Hardy-Weinberg equilibrium exact test p/midp-value.
    The default is chrom,ref,alt,gcounts,hetfreq,sexaf,p.

  --indep-pairwise [window size]<kb> {step size (variant ct)} [r^2 threshold]
  --indep-pairphase [window size]<kb> {step size (variant ct)} [r^2 threshold]
    Generate a list of variants in approximate linkage equilibrium.  With the
    'kb' modifier, the window size is in kilobase instead of variant count
    units.  (Pre-'kb' space is optional, i.e. '--indep-pairphase 500 kb 0.5'
    and '--indep-pairphase 500kb 0.5' have the same effect.)
    The step size now defaults to 1 if it's unspecified, and *must* be 1 if the
    window is in kilobase units.
    Note that you need to rerun plink2 using --extract or --exclude on the
    .prune.in/.prune.out file to apply the list to another computation.

  --make-king <square | square0 | triangle> <zs | bin | bin4>
    KING-robust kinship estimator, described by Manichaikul A, Mychaleckyj JC,
    Rich SS, Daly K, Sale M, Chen WM (2010) Robust relationship inference in
    genome-wide association studies.  By default, this writes a
    lower-triangular tab-delimited table of kinship coefficients to
    {output prefix}.king, and a list of the corresponding sample IDs to
    {output prefix}.king.id.  The first row of the .king file contains a single
    [genome 1-genome 2] kinship coefficient, the second row has the
    [genome 1-genome 3] and [genome 2-genome 3] kinship values in that order,
    etc.
    * Only autosomes are currently considered.
    * Pedigree information is currently ignored; the between-family estimator
      is used for all pairs.
    * If the 'square' or 'square0' modifier is present, a square matrix is
      written instead; 'square0' fills the upper right triangle with zeroes.
    * If the 'bin' modifier is present, a binary (square) matrix of
      double-precision floating point values, suitable for loading from R, is
      instead written to {output prefix}.king.bin.  ('bin4' specifies
      single-precision numbers instead.)  This can be combined with 'square0'
      if you still want the upper right zeroed out, or 'triangle' if you don't
      want to pad the upper right at all.
    * The computation can be subdivided with --parallel.
  --make-king-table <zs> <counts> <cols=[column set descriptor]>
    Similar to --make-king, except results are reported in the original .kin0
    text table format (with minor changes, e.g. row order is more friendly to
    incremental addition of samples).
    Supported column sets are:
      id: FID1/ID1/FID2/ID2.
      maybesid: SID1/SID2, if at least one value is nonmissing.  Must be used
                with 'id'.
      sid: Force SID1/SID2 even when all values are missing.
      nsnp: Number of variants considered (autosomal, neither call missing).
      hethet: Proportion/count of considered call pairs which are het-het.
      ibs0: Proportion/count of considered call pairs which are opposite homs.
      ibs1: HET1_HOM2 and HET2_HOM1 proportions/counts.
      kinship: KING-robust between-family kinship estimator.
    The default is id,maybesid,nsnp,hethet,ibs0,kinship.  hethet/ibs0/ibs1
    values are proportions unless the 'counts' modifier is present.  If id is
    omitted, a .kin0.id file is also written.

  --king-cutoff {.king.bin + .king.id fileset prefix} [threshold]
    Exclude one member of each pair of samples with KING-robust kinship greater
    than the given threshold.  Remaining/excluded sample IDs are written to
    {output prefix}.king.cutoff.in + .king.cutoff.out.
    If present, the .king.bin file must be triangular (either precision is ok).

  --write-snplist <zs>
    List all variants which pass your filters/inclusion thresholds.

  --glm <zs> <sex | no-x-sex> <genotypic | hethom | dominant | recessive>
        <interaction> <hide-covar> <intercept> <standard-beta> <firth>
        <cols=[col set descriptor]> <perm | mperm=[value]> <perm-count>
    Basic association analysis on quantitative and/or case/control phenotypes.
    For each variant, a linear (for quantitative traits) or logistic (for
    case/control) regression is run with the phenotype as the dependent
    variable, and alt1 dosage and a constant-1 column as predictors.
    * For multiallelic variants, when total dosage of alt2 + alt3 + ... exceeds
      0.5, the dosage is treated as missing.
    * By default, sex (male = 1, female = 2; note that this is a change from
      PLINK 1.x) is automatically added as a predictor for X chromosome
      variants, and no others.  The 'sex' modifier causes it to be added
      everywhere, while 'no-x-sex' excludes it entirely.
    * The 'genotypic' modifier adds an additive effect/dominance deviation 2df
      joint test (0-2 and 0..1..0 coding), while 'hethom' uses 0..0..1 and
      0..1..0 coding instead.  If permutation is also requested, these
      modifiers cause permutation to be based on the joint test.
    * 'dominant' and 'recessive' specify a model assuming full dominance or
      recessiveness, respectively, for the ref allele.  I.e. the genotype
      column is recoded as 0..1..1 or 0..0..1, respectively.
    * 'interaction' adds genotype x covariate interactions to the model.  This
      cannot be combined with the usual permutation tests; use --tests to
      define the permutation test statistic instead.
    * Additional predictors can be added with --covar.  By default, association
      statistics are reported for all nonconstant predictors; 'hide-covar'
      suppresses covariate-only results, while 'intercept' causes intercepts
      to be reported.
    * The 'standard-beta' modifier standardizes the covariates to zero mean and
      unit variance before regression.  With quantitative phenotypes, the
      genotype columns are also standardized.
    * For logistic regression, the p-value is normally based on Fisher's exact
      test on hardcall allele counts (and the odds ratio is reported +/- inf)
      when there is {quasi-}complete separation involving a genotype column;
      and covariate columns which perfectly predict either case or control
      status are automatically removed.  To eliminate these special cases and
      use Firth logistic regression everywhere (recommended with --covar), add
      the 'firth' modifier.
    * 'perm' normally causes an adaptive permutation test to be performed on
      the main effect, while 'mperm=[value]' starts a max(T) permutation test.
    * 'perm-count' causes the permutation test report to include counts instead
      of frequencies.
    The main report supports the following column sets:
      chrom: Chromosome ID.
      pos: Base-pair coordinate.
      (ID is always present, and positioned here.)
      ref: Reference allele.
      alt1: Alternate allele 1.
      alt: All alternate alleles, comma-separated.
      alt1count: Alternate allele 1 count.
      alt1countcc: alt1 count in cases, then controls (case/control only).
      alt1freq: Total alt allele frequency.
      alt1freqcc: alt frequency in cases, then controls (case/control only).
      info: Empirical / theoretical variance quality metric.
      test: Test identifier.  (Required unless only one test is run.)
      nobs: Number of samples in the regression.
      beta: Regression coefficient.
      orbeta: Odds ratio for case/control, beta for quantitative traits.
      se: Standard error of beta/odds ratio.
      ci: Bounds of symmetric approximate confidence interval (requires --ci).
      t: T-statistic.
      p: Asymptotic p-value for t-statistic.
    The default is chrom,pos,ref,alt1,test,nobs,orbeta,se,ci,t,p.

The following other flags are supported.
  --script [fname]   : Include command-line options from file.
  --rerun {log}      : Rerun commands in log (default 'plink2.log').
  --version          : Display only version number before exiting.
  --silent           : Suppress output to console.
  --double-id        : Set both FIDs and IIDs to the VCF sample ID.
  --const-fid {ID}   : Set all FIDs to the given constant (default '0').
  --id-delim {d}     : Parse sample IDs as [FID][d][IID] (or
                       [FID][d][IID][d][SID] when delimiter appears twice).
                       Default delimiter is '_'.
  --vcf-idspace-to [c] : Convert spaces in sample IDs to the given character.
  --vcf-require-gt     : Skip variants with no GT field.
  --vcf-min-gq [val]   : No-call genotypes when GQ is below the threshold.
  --vcf-half-call [m]  : Specify how '0/.' and similar VCF GT values should be
                         handled.  The following four modes are supported:
                         * 'error'/'e' (default) errors out and reports line #.
                         * 'haploid'/'h' treats them as haploid calls.
                         * 'missing'/'m' treats them as missing.
                         * 'reference'/'r' treats the missing value as 0.
  --allow-extra-chr  : Permit unrecognized chromosome codes (alias --aec).
  --biallelic-only <strict> <list> : Skip variants with 2+ alt. alleles.
  --var-min-qual [val]             : Skip variants with low/missing QUAL.
  --var-filter {exception(s)...}   : Skip variants which have FILTER failures.
  --allow-no-samples : Allow the input fileset to contain no samples.
  --allow-no-vars    : Allow the input fileset to contain no variants.
  --pheno [filename] : Specify additional phenotype/covariate file.
  --pheno-name [...] : Only load the designated phenotype(s) from the
                       --pheno (if one was specified) or .psam (if no --pheno)
                       file.  Separate multiple names with spaces or commas,
                       and use dashes to designate ranges.
  --covar [filename] : Specify additional covariate file.
  --covar-name [...] : Only load the designated covariate(s) from the
                       --covar (if one was specified), --pheno (if no --covar),
                       or .psam (if no --covar or --pheno) file.
  --keep <sid> [fn]  : Exclude all samples not named in the file.
  --remove <sid> [f] : Exclude all samples named in the file.
  --keep-fam [fname] : Exclude all families not named in the file.
  --remove-fam [fn]  : Exclude all families named in the file.
  --extract <range> [f] : Exclude all variants not named in the file.
  --exclude <range> [f] : Exclude all variants named in the file.
  --chr [chr(s)...]  : Exclude all variants not on the given chromosome(s).
                       Valid choices for humans are 0 (unplaced), 1-22, X, Y,
                       XY, MT, PAR1, and PAR2.  Separate multiple chromosomes
                       with spaces and/or commas, and use a dash (no adjacent
                       spaces permitted) to denote a range, e.g.
                       '--chr 1-4, 22, par1, x, par2'.
  --not-chr [...]    : Reverse of --chr (exclude variants on listed
                       chromosomes).
  --autosome         : Exclude all non-autosomal variants.
  --autosome-par     : Exclude all non-autosomal variants, except those in a
                       pseudo-autosomal region.
  --geno {val} <hh-nonmiss> : Exclude variants with missing call frequencies
                              greater than a threshold (default 0.1).  (Note
                              that the default threshold is only applied if
                              --geno is invoked without a parameter; when
                              --geno is not invoked, no per-variant missing
                              call frequency ceiling is enforced at all.  Other
                              inclusion/exclusion default thresholds work the
                              same way.)
                              By default, heterozygous haploid calls are
                              treated as missing; change this with
                              'hh-nonmiss'.
  --mind {val} <hh-missing> : Exclude samples with missing call frequencies
                              greater than a threshold (default 0.1).  By
                              default, heterozygous haploid calls are NOT
                              treated as missing by this filter; change this
                              with 'hh-missing'.
  --maf {freq}       : Exclude variants with nonmajor allele frequency lower
                       than a threshold (default 0.01).
  --max-maf [freq]   : Exclude variants with MAF greater than the threshold.
  --mac [ct]         : Exclude variants with nonmajor allele count lower than
                       the given threshold.
  --max-mac [ct]     : Exclude variants with nonmajor allele count greater than
                       the given threshold.
  --maf-succ         : Rule of succession MAF estimation (used in EIGENSOFT).
                       Given j observations of the most common allele and k
                       observations of the other(s), infer a nonmajor allele
                       frequency of (k+1) / (j+k+2), rather than the default
                       k / (j+k).
  --hwe [p] <midp> <keep-fewhet> : Exclude variants with Hardy-Weinberg
                                   equilibrium exact test p-values below a
                                   threshold.
                                   * By default, only founders are considered.
                                   * chrX p-values are now computed using
                                     Graffelman and Weir's method.
                                   * With 'keep-fewhet', variants which fail
                                     the test in the too-few-hets direction are
                                     not excluded.  (On chrX, this uses the
                                     ratio between the Graffelman/Weir p-value
                                     and the female-only p-value.)
                                   * There is currently no special handling of
                                     case/control phenotypes.
  --keep-females     : Exclude male and unknown-sex samples.
  --keep-males       : Exclude female and unknown-sex samples.
  --keep-nosex       : Exclude all known-sex samples.
  --remove-females   : Exclude female samples.
  --remove-males     : Exclude male samples.
  --remove-nosex     : Exclude unknown-sex samples.
  --keep-founders    : Exclude nonfounder samples.
  --keep-nonfounders : Exclude founder samples.
  --nonfounders      : Include nonfounders in allele freq/HWE calculations.
  --output-chr [MT code] : Set chromosome coding scheme in output files by
                           providing the desired human mitochondrial code.
                           Options are '26', 'M', 'MT', '0M', 'chr26', 'chrM',
                           and 'chrMT'; default is now 'MT' (note that this is
                           a change from PLINK 1.x, which defaulted to '26').
  --split-par [bp1] [bp2] : Changes chromosome code of all X chromosome
  --split-par [build]       variants with bp position <= bp1 to PAR1, and those
                            with position >= bp2 to PAR2.  The following build
                            codes are supported as shorthand:
                            * 'b36'/'hg18' = NCBI 36, 2709521/154584237
                            * 'b37'/'hg19' = GRCh37, 2699520/154931044
                            * 'b38'/'hg38' = GRCh38, 2781479/155701383
  --merge-par             : Merge PAR1/PAR2 back with X.  Requires PAR1 to be
                            positioned immediately before X, and PAR2 to be
                            immediately after X.  (Should *not* be used with
                            "--export vcf", since it causes male
                            homozygous/missing calls in PAR1/PAR2 to be
                            reported as haploid.)
  --set-missing-var-ids [t]  : Given a template string with a '@' where the
  --set-all-var-ids [t]        chromosome code should go and '#' where the bp
                               coordinate belongs, --set-missing-var-ids
                               assigns chromosome-and-bp-based IDs to unnamed
                               variants, while --set-all-var-ids resets all
                               IDs.
                               You may also use '$r'/'$a' to refer to the
                               ref and alt1 alleles, or '$1'/'$2' to refer to
                               them in alphabetical order.
  --new-id-max-allele-len [] : Specify maximum number of leading characters
                               from allele names to include in new variant IDs
                               (default 23).
  --missing-var-code [str]   : Change unnamed variant code for
                               --set-missing-var-ids (default '.').
  --update-sex [f] {n} : Update sexes.  Sex (1/M/m = male, 2/F/f = female, 0 =
                         missing) is loaded from column n+2 (default n is 1).
  --real-ref-alleles : Treat A2 alleles in a PLINK 1.x fileset as actual
                       ref alleles, rather than flagging them as provisional.
  --maj-ref <force>  : Set major alleles to reference, like PLINK 1.x
                       automatically did.  (Note that this is now opt-in rather
                       than opt-out; --keep-allele-order is no longer necessary
                       to prevent allele-swapping.)  By default, this only
                       affects variants with "provisional reference" flags;
                       add 'force' to override validated reference alleles as
                       well.
                       All new reference alleles are marked as provisional.
  --indiv-sort [m] <sid> {f} : Specify FID/IID(/SID) sort order.  The following
                               four modes are supported:
                               * 'none'/'0' keeps samples in the order they
                                 were loaded.  Default for non-merge.
                               * 'natural'/'n' invokes "natural sort", e.g.
                                 'id2' < 'ID3' < 'id10'.  Default when merging.
                               * 'ascii'/'a' sorts in ASCII order, e.g.
                                 'ID3' < 'id10' < 'id2'.
                               * 'file'/'f' uses the order in the given file
                                 (named in the last parameter).  The 'sid'
                                 modifier has the usual effect when this mode
                                 is requested.
  --condition [var ID] <dominant | recessive> : Add one variant's alt1 dosages
                                                as a --glm covariate.
  --condition-list [f] <dominant | recessive> : Add all variants in the file as
                                                --glm covariates.
  --parameters [...] : Include only the given covariates/interactions in the
                       --glm model, identified by a list of 1-based indices
                       and/or ranges of them.
  --tests [...]      : Perform a (joint) test on the specified term(s) in the
  --tests all          --glm model, identified by 1-based indices and/or ranges
                       of them.  If permutation was requested, it is based on
                       this test.
                       * Note that, when --parameters is also present, the
                         indices refer to the terms remaining AFTER pruning by
                         --parameters.
                       * You can use '--tests all' to include all terms.
  --vif [max VIF]    : Set VIF threshold for --glm multicollinearity check
                       (default 50).  For case/control phenotypes, only the
                       covariates are checked, and the entire phenotype is
                       skipped if a VIF is too high.)
  --max-corr [val]   : Skip --glm regression when the absolute value of the
                       correlation between two predictors exceeds this value
                       (default 0.999).  For case/control phenotypes, only
                       covariates are checked.
  --xchr-model [m]   : Set the chrX --glm model.
                       * '0' = skip sex and haploid chromosomes.
                       * '1' = add sex as a covar on chrX, code males 0..1.
                       * '2' (default) = chrX sex covar, code males 0..2.
                       (Use the --glm 'interaction' modifier to test for
                       interaction between genotype and sex.)
  --info-bounds {min} {max} : Skip --glm regression when the dosage INFO metric
                              isn't in [min, max] (defaults 0.1 and 2.0).
  --adjust <gc> <log10> <cols=[column set descriptor]> :
    For each association test, report some multiple-testing corrections, sorted
    in increasing-p-value order.
    * 'gc' causes genomic-controlled p-values to be used in the formulas.
    * 'log10' causes negative base 10 logs of p-values to be reported, instead
      of raw p-values.
    The following column sets are supported:
      chrom: Chromosome ID.
      pos: Base-pair coordinate.
      (ID is always present, and positioned here.)
      ref: Reference allele.
      alt1: Alternate allele 1.
      alt: All alternate alleles, comma-separated.
      unadj: Unadjusted p-value.
      gc: Devlin & Roeder (1999) genomic control corrected p-value (additive
          models only).
      qq: P-value quantile.
      bonf: Bonferroni correction.
      holm: Holm-Bonferroni (1979) adjusted p-value.
      sidakss: Sidak single-step adjusted p-value.
      sidaksd: Sidak step-down adjusted p-value.
      fdrbh: Benjamini & Hochberg (1995) step-up false discovery control.
      fdrby: Benjamini & Yekutieli (2001) step-up false discovery control.
    Default set is chrom,unadj,gc,bonf,holm,sidakss,sidaksd,fdrbh,fdrby.
  --lambda           : Set genomic control lambda for --adjust.
  --ci [size]        : Report confidence ratios for odds ratios/betas.
  --pfilter [val]    : Filter out assoc. test results with higher p-values.
  --aperm [min perms - 1] {max perms} {alpha} {beta} {init interval} {slope} :
    Set up to six parameters controlling adaptive permutation tests.
    * The first two control the minimum and maximum number of permutations that
      may be run for each variant; default values are 5 and 1000000.
    * The next two control the early termination condition.  A
      100% * (1 - beta/2T) confidence interval is calculated for each empirical
      p-value, where T is the total number of variants; whenever this
      confidence interval doesn't contain alpha, the variant is exempted from
      further permutation testing.  Default values are 0 and 1e-4.
    * The last two control when the early termination condition is checked.  If
      a check occurs at permutation #p, the next check occurs after
      [slope]p + [init interval] more permutations (rounded down).  Default
      initial interval is 1, and default slope is 0.001.
  --mperm-save       : Save best max(T) permutation test statistics.
  --mperm-save-all   : Save all max(T) permutation test statistics.
  --parallel [k] [n] : Divide the output matrix into n pieces, and only compute
                       the kth piece.  The primary output file will have the
                       piece number included in its name, e.g. plink2.king.13
                       or plink2.king.13.zst if k is 13.  Concatenating these
                       files in order will yield the full matrix of interest.
                       N.B. This generally cannot be used to directly write a
                       symmetric square matrix.  Choose square0 or triangle
                       shape instead, and postprocess as necessary.
  --memory [val]     : Set size, in MB, of initial workspace malloc attempt.
                       (Practically mandatory when using GNU parallel.)
  --threads [val]    : Set maximum number of concurrent threads.
  --seed [val...]    : Set random number seed(s).  Each value must be an
                       integer between 0 and 4294967295 inclusive.
  --output-min-p [p] : Specify minimum p-value to write to reports.
  --debug            : Use slower, more crash-resistant logging method.

Primary methods paper:
Chang CC, Chow CC, Tellier LCAM, Vattikuti S, Purcell SM, Lee JJ (2015)
Second-generation PLINK: rising to the challenge of larger and richer datasets.
GigaScience, 4.
